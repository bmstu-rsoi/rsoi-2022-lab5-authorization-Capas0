version: "3"
services:
  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  gateway:
    image: cr.yandex/crpdp3dvnfjjbr6q6ie5/rsoi-2022-lab5-gateway
    build:
      dockerfile: docker/gateway/Dockerfile
      context: .
    volumes:
      - ./src/gateway/:/app/
    environment:
      PORT: 8080
      FLASK_APP: '__init__'
      APP_FOLDER: "/app"
    ports:
      - "8080:8080"
    depends_on:
      - library
      - rating
      - reservation
    restart: always

  library:
    image: cr.yandex/crpdp3dvnfjjbr6q6ie5/rsoi-2022-lab5-library
    build:
      dockerfile: docker/library/Dockerfile
      context: .
    volumes:
      - ./src/library/:/app/
    environment:
      PORT: 8060
      FLASK_APP: '__init__'
      APP_FOLDER: "/app"
      DATABASE_URL: "postgresql://program:test@postgres:5432/libraries"
    ports:
      - "8060:8060"
    depends_on:
      - postgres
    restart: always

  rating:
    image: cr.yandex/crpdp3dvnfjjbr6q6ie5/rsoi-2022-lab5-rating
    build:
      dockerfile: docker/rating/Dockerfile
      context: .
    volumes:
      - ./src/rating/:/app/
    environment:
      PORT: 8050
      FLASK_APP: '__init__'
      APP_FOLDER: "/app"
      DATABASE_URL: "postgresql://program:test@postgres:5432/ratings"
    ports:
      - "8050:8050"
    depends_on:
      - postgres
    restart: always

  reservation:
    image: cr.yandex/crpdp3dvnfjjbr6q6ie5/rsoi-2022-lab5-reservation
    build:
      dockerfile: docker/reservation/Dockerfile
      context: .
    volumes:
      - ./src/reservation/:/app/
    environment:
      PORT: 8070
      FLASK_APP: '__init__'
      APP_FOLDER: "/app"
      DATABASE_URL: "postgresql://program:test@postgres:5432/reservations"
    ports:
      - "8070:8070"
    depends_on:
      - postgres
    restart: always

volumes:
  db-data: